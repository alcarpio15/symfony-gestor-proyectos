security:

    encoders:
        App\Entity\GestorUsuario: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        gestor_usuarios:
            entity:
                class: App\Entity\GestorUsuario
                property: username

        # in_memory: { memory: ~ }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: login
                check_path: login
                default_target_path: homepage
                csrf_token_generator: security.csrf.token_manager
            # https://symfony.com/doc/current/security/form_login_setup.html
            
            logout:
                path:   /logout
                target: /login

            logout_on_user_change: true
    role_hierarchy:
        ROLE_ADMIN:  [ROLE_DIRECT, ROLE_ANALST, ROLE_CORDGN]
        ROLE_DIRECT: [ROLE_CORDGN, ROLE_ANALST]
        ROLE_CORDGN: [ROLE_CORDAR, ROLE_DVLPR]
        ROLE_CORDAR: [ROLE_DVLPR]


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
